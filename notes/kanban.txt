##########################################################
# completed
##########################################################

* create node and edge

* query node and edge

* expandRight simple single level

* create custom node and edge classes (children of ootb ones with tighter graph support)

* expandLeft simple single level

* expandRight complex (one relClause) single level

* expandLeft complex (one otherSideClause) single level

* expandRight complex (multiple relClause, multiple otherSideClause) single level

* Switch edge constructor to be object based (not string based)

* combine KnowledgeGraph.upsert[...]() to KnowledgeGraph.upsert()

* switch node constructor to specify collection

* expandRight simple single level with otherSide objects in different collections

* list node collections

* getEdgeTypesForLeftType

* getEdgeTypesForRightType

* getLeftTypesForEdgeType

* getRightTypesforEdgeType

* replace "Collection" with "Type" in kgraph language.

##########################################################
# WIP
##########################################################

* JavaDoc the code
    + use JAutodoc
	- add meaningful text - currently stopped at KnowledgeGraph.getEdgeTypes()
	- address Jautodoc TODO comments

##########################################################
# backlog
##########################################################

* support DB access via config file(s) - see ArangoDB java driver source for ideas.

* Change getNodeTypes() to not return schema node types. (nodeTypesCollectionName, edgeTypesCollectionName)

* support DB access via config file(s) - see ArangoDB java driver source for ideas.
    - ArangoDB system user and password
    - ArangoDB host and port?

* create performance tests and associated test suite.

* add support in kGraph to work with a pool of ArangoDB end-points?


* Big load test

* restructure kanban.txt to have "done" actions from top to bottom have newest release
  up-top, and newest added feature for the release be at the top of that release.
  (basically making the "done" section provide an easily readable feature list.)
  
* tag version 1.0.0 of KGraph

* Disallow client code from making/using Type with reserved names
    - KnowledgeGraph.nodeTypesCollectionName
    - KnowledgeGraph.edgeTypesCollectionName
	
* break apart KnowledgeGraph - no God Class